<Window x:Class="ClickOnceUtil4UI.UI.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewModels="clr-namespace:ClickOnceUtil4UI.UI.ViewModels"
        xmlns:converters="clr-namespace:ClickOnceUtil4UI.UI.Converters"
        xmlns:views="clr-namespace:ClickOnceUtil4UI.UI.Views"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:behaviors="clr-namespace:ClickOnceUtil4UI.UI.Behaviors"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance viewModels:MainWindowViewModel}"
        WindowStartupLocation="CenterScreen"
        Title="ClickOnce application utility for .NET Framwork 4.x applications" MinHeight="450" MinWidth="800" Height="450" Width="800">
    <Window.Resources>
        <ResourceDictionary>
            <Style TargetType="{x:Type Expander}" x:Key="GlobalExpanderStyle">
                <Setter Property="IsExpanded" Value="True" />
            </Style>
            <Style TargetType="{x:Type Expander}" BasedOn="{StaticResource GlobalExpanderStyle}" />
            <Style x:Key="ManifestNameTitleStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="Foreground" Value="Red" />
                <Setter Property="FontSize" Value="25" />
            </Style>
            <Style x:Key="StepExpenderTextDescription" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource StepExpenderTextPrefix}">
                <Setter Property="Foreground" Value="Green" />
            </Style>
            <converters:TextLeftTrimmerConverter MaxLength="50" x:Key="TextLeftTrimmerConverter"/>
            <converters:EnumDisplayAttributeConverter x:Key="EnumDisplayAttributeConverter" />
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Menu DataContext="{Binding MenuViewModel}" d:DataContext="{d:DesignInstance viewModels:MenuViewModel}">
            <MenuItem Header="File">
                <MenuItem Header="Exit" Command="{Binding CloseCommand}" />
            </MenuItem>
            <MenuItem Header="Help">
                <MenuItem.Resources>
                    <Style TargetType="{x:Type MenuItem}" />
                </MenuItem.Resources>
                <MenuItem Header="Homepage" Command="{Binding ShowHelpCommand}" CommandParameter="HomePage" />
                <MenuItem Header="Application help">
                    <MenuItem Header="[.Application file] window part" Command="{Binding ShowHelpCommand}" CommandParameter="DeployColumn" />
                    <MenuItem Header="[.Manifest file] window part" Command="{Binding ShowHelpCommand}" CommandParameter="ApplicationColumn" />
                </MenuItem>
                <MenuItem Header="ClickOnce and Authenticode (timestamp)" Command="{Binding ShowHelpCommand}" CommandParameter="TimestampClickOnceAndAuthenticode" />
                <MenuItem Header="ClickOnce Security and Deployment" Command="{Binding ShowHelpCommand}" CommandParameter="SecurityAndDeploy" />
                <MenuItem Header="Features">
                    <MenuItem Header="Checking for known application embed manifest assembly identity problem" Command="{Binding ShowHelpCommand}" CommandParameter="CreateApplicationWithoutManifest" />
                    <MenuItem Header="Warring if entry point .exe file is strong named (have public token). Message about required signing" Command="{Binding ShowHelpCommand}" CommandParameter="ClickOnceStrongName" />
                    <MenuItem Header="In the case when .NET framework do not have a hotfix, then we doing a replace" Command="{Binding ShowHelpCommand}" CommandParameter="NetFrameworkHotfix" />
                    <MenuItem Header="If your application is already inside some virtual directory, then DeploymentUrl should be auto filled" Command="{Binding ShowHelpCommand}" CommandParameter="VirtualDirectoryDeploymentUrl" />
                    <MenuItem Header="Works correctly with a .deploy extension and appending [mapFileExtensions] attribute in the case of true value" Command="{Binding ShowHelpCommand}" CommandParameter="DeployExtension" />
                    <MenuItem Header="Mage.exe unable change update strategy" Command="{Binding ShowHelpCommand}" CommandParameter="MageUpdateStrategy" />
                </MenuItem>
                <MenuItem Header="Troubleshooting Specific Errors in ClickOnce Deployments" Command="{Binding ShowHelpCommand}" CommandParameter="TroubleshootingClickOnce" />
                <MenuItem Header="Timestamp services" Command="{Binding ShowHelpCommand}" CommandParameter="TimestampServices" />
            </MenuItem>
            <MenuItem Header="About" Command="{Binding AboutCommand}"/>
        </Menu>
        <ScrollViewer Grid.Row="1">
            <Grid Margin="10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TextBlock Text="Do steps below:" Style="{StaticResource StepExpenderTextPrefix}"/>
                <Expander Grid.Row="1">
                    <Expander.Header>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Step 1. " Style="{StaticResource StepExpenderTextPrefix}" />
                            <TextBlock Text="Choose source root" Style="{StaticResource StepExpenderTextDescription}" />
                            <TextBlock Text="{Binding SelectedFolder.FullPath, Converter={StaticResource TextLeftTrimmerConverter}}" ToolTip="{Binding SelectedFolder.FullPath}" VerticalAlignment="Center" />
                        </StackPanel>
                    </Expander.Header>
                    <Expander.Content>
                        <Grid Margin="5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Style="{StaticResource StepExpenderTextPrefix}" Text="Folder path:"/>
                            <TextBox Grid.Column="1" IsReadOnly="True" Text="{Binding SelectedFolder.FullPath, Mode=OneWay}" />
                            <Button Content="Choose" Grid.Column="2" Command="{Binding ChooseCommand}"/>
                        </Grid>
                    </Expander.Content>
                </Expander>
                <Expander Grid.Row="2">
                    <Expander.Style>
                        <Style TargetType="{x:Type Expander}" BasedOn="{StaticResource GlobalExpanderStyle}">
                            <Setter Property="Visibility" Value="Visible" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedFolder}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Expander.Style>
                    <Expander.Header>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Step 2. " Style="{StaticResource StepExpenderTextPrefix}" />
                            <TextBlock Text="Choose action" Style="{StaticResource StepExpenderTextDescription}" />
                        </StackPanel>
                    </Expander.Header>
                    <Expander.Content>
                        <StackPanel>
                            <TextBlock Text="Available actions:"/>
                            <ComboBox ItemsSource="{Binding AvaliableActions}" SelectedItem="{Binding SelectedAction}" IsSynchronizedWithCurrentItem="True">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Converter={StaticResource EnumDisplayAttributeConverter}}" />
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                        </StackPanel>
                    </Expander.Content>
                </Expander>
                <Expander Grid.Row="3">
                    <Expander.Style>
                        <Style TargetType="{x:Type Expander}" BasedOn="{StaticResource GlobalExpanderStyle}">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedAction}" Value="New">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding SelectedAction}" Value="Update">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Expander.Style>
                    <Expander.Header>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Step 3. " Style="{StaticResource StepExpenderTextPrefix}" />
                            <TextBlock Text="Settings" Style="{StaticResource StepExpenderTextDescription}" />
                        </StackPanel>
                    </Expander.Header>
                    <Expander.Content>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <StackPanel Grid.ColumnSpan="2" Orientation="Vertical">
                                <StackPanel Orientation="Vertical">
                                    <StackPanel>
                                        <TextBlock Text="Entry point executable file" Style="{StaticResource ManifestNameTitleStyle}" />
                                        <TextBlock Text="(This file will be launched after download)" Style="{StaticResource ManifestNameTitleStyle}" />
                                    </StackPanel>
                                    <ComboBox ItemsSource="{Binding ApplicationEntryPoints}" SelectedItem="{Binding SelectedEntrypoint, Mode=TwoWay}" IsSynchronizedWithCurrentItem="True" />
                                </StackPanel>
                                <StackPanel Orientation="Vertical">
                                    <StackPanel>
                                        <TextBlock Text="Application instance name" Style="{StaticResource ManifestNameTitleStyle}" />
                                        <TextBlock Text="(Usually its a same name with executable file, but in the case when you have two published applications with a same name and versions second application installation will have an error result [same application already installed], there for two unique names for similar applications solves a problem)" TextWrapping="Wrap" />
                                    </StackPanel>
                                    <TextBox Text="{Binding ApplicationName, Mode=TwoWay}" />
                                </StackPanel>
                                <StackPanel Orientation="Vertical">
                                    <TextBlock Text="ClickOnce application version (Not your application)" Style="{StaticResource ManifestNameTitleStyle}" />
                                    <TextBox Text="{Binding Version}" />
                                </StackPanel>
                            </StackPanel>
                            <StackPanel Orientation="Vertical" Grid.Row="1" >
                                <TextBlock Text=".Application file" Style="{StaticResource ManifestNameTitleStyle}" />
                                <views:ManifestEditorView x:Name="DeployManifest" DataContext="{Binding DeployManifest}" />
                            </StackPanel>
                            <StackPanel Grid.Column="1" Orientation="Vertical" Grid.Row="1">
                                <TextBlock Text=".Manifest file" Style="{StaticResource ManifestNameTitleStyle}" />
                                <views:ManifestEditorView x:Name="ApplicationManifest" DataContext="{Binding ApplicationManifest}" />
                            </StackPanel>
                        </Grid>
                    </Expander.Content>
                </Expander>
                <Expander Grid.Row="3">
                    <Expander.Style>
                        <Style TargetType="{x:Type Expander}" BasedOn="{StaticResource GlobalExpanderStyle}">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedAction}" Value="Resigning">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Expander.Style>
                    <Expander.Header>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Step 3. " Style="{StaticResource StepExpenderTextPrefix}" />
                            <TextBlock Text="Resigning settings" Style="{StaticResource StepExpenderTextDescription}" />
                        </StackPanel>
                    </Expander.Header>
                    <Expander.Content>
                        <StackPanel Orientation="Vertical">
                            <StackPanel Orientation="Vertical">
                                <StackPanel>
                                    <TextBlock Text="Timestamp server url" Style="{StaticResource ManifestNameTitleStyle}" />
                                </StackPanel>
                                <TextBox Text="{Binding TimestampUrl, Mode=TwoWay}" />
                            </StackPanel>
                            <StackPanel Orientation="Vertical">
                                <StackPanel>
                                    <TextBlock Text="Choose certificate" Style="{StaticResource ManifestNameTitleStyle}" />
                                    <TextBlock TextWrapping="Wrap" TextTrimming="WordEllipsis" Text="(ClickOnce application can be signed or unsigned. Unsigned manifests can simplify development and testing of your application. However, unsigned manifests introduce substantial security risks in a production environment. Only consider using unsigned manifests if your ClickOnce application runs on computers within an intranet that is completely isolated from the internet or other sources of malicious code.)" />
                                </StackPanel>
                                <CheckBox IsChecked="{Binding IsTemporaryCertificate}" Content="Create and use temporary certificate (&quot;CN=TempCA&quot;)" x:Name="TemporaryCheckBox" />
                                <StackPanel Orientation="Vertical">
                                    <StackPanel.Style>
                                        <Style TargetType="{x:Type StackPanel}">
                                            <Setter Property="Visibility" Value="Visible" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ElementName=TemporaryCheckBox, Path=IsChecked}" Value="True">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </StackPanel.Style>
                                    <Grid Margin="5">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Style="{StaticResource StepExpenderTextPrefix}" Text="Certificate file (*.pfx)"/>
                                        <TextBox Grid.Column="1" IsReadOnly="True" Text="{Binding SelectedCetificatePath, Mode=OneWay}" />
                                        <Button Content="Choose" Grid.Column="2" Command="{Binding ChooseCertificateCommand}"/>
                                    </Grid>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Style="{StaticResource StepExpenderTextPrefix}" Text="Certificate Password:" />
                                        <PasswordBox Grid.Column="1">
                                            <i:Interaction.Behaviors>
                                                <behaviors:PasswordBoxBehavior Password="{Binding Password, Mode=OneWayToSource}" />
                                            </i:Interaction.Behaviors>
                                        </PasswordBox>
                                    </Grid>
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                    </Expander.Content>
                </Expander>
            </Grid>
        </ScrollViewer>
        <Border Grid.Row="2" BorderThickness="0,1,0,0" BorderBrush="DarkGoldenrod">
            <StackPanel HorizontalAlignment="Right" Orientation="Horizontal" Margin="5">
                <Button Command="{Binding BrowseCommand}" Width="150" Height="50" ToolTip="Browse application deploy URL.">
                    <TextBlock Text="Browse" Margin="5" Style="{StaticResource MainTextStyle}" Foreground="Blue" HorizontalAlignment="Left" />
                </Button>
                <Button Command="{Binding CleanCacheCommand}" Width="150" Height="50" ToolTip="ClickOnce cache cleaning action">
                    <TextBlock Text="Clean" Margin="5" Style="{StaticResource MainTextStyle}" Foreground="Black" HorizontalAlignment="Left" />
                </Button>
                <Button Command="{Binding BuildCommand}" Width="150" Height="50" ToolTip="Build current action">
                    <TextBlock Text="Build" Margin="5" Style="{StaticResource MainTextStyle}" />
                </Button>
            </StackPanel>
        </Border>
    </Grid>
</Window>
